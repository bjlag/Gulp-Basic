// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$alarm-name: 'alarm'
$alarm-x: 225px
$alarm-y: 106px
$alarm-offset-x: -225px
$alarm-offset-y: -106px
$alarm-width: 60px
$alarm-height: 60px
$alarm-total-width: 366px
$alarm-total-height: 241px
$alarm-image: '../images/sprite.png'
$alarm: (225px, 106px, -225px, -106px, 60px, 60px, 366px, 241px, '../images/sprite.png', 'alarm', )

$cafe-name: 'cafe'
$cafe-x: 204px
$cafe-y: 0px
$cafe-offset-x: -204px
$cafe-offset-y: 0px
$cafe-width: 87px
$cafe-height: 91px
$cafe-total-width: 366px
$cafe-total-height: 241px
$cafe-image: '../images/sprite.png'
$cafe: (204px, 0px, -204px, 0px, 87px, 91px, 366px, 241px, '../images/sprite.png', 'cafe', )

$chair-name: 'chair'
$chair-x: 102px
$chair-y: 0px
$chair-offset-x: -102px
$chair-offset-y: 0px
$chair-width: 87px
$chair-height: 91px
$chair-total-width: 366px
$chair-total-height: 241px
$chair-image: '../images/sprite.png'
$chair: (102px, 0px, -102px, 0px, 87px, 91px, 366px, 241px, '../images/sprite.png', 'chair', )

$cleaning-2-name: 'cleaning-2'
$cleaning-2-x: 0px
$cleaning-2-y: 106px
$cleaning-2-offset-x: 0px
$cleaning-2-offset-y: -106px
$cleaning-2-width: 60px
$cleaning-2-height: 60px
$cleaning-2-total-width: 366px
$cleaning-2-total-height: 241px
$cleaning-2-image: '../images/sprite.png'
$cleaning-2: (0px, 106px, 0px, -106px, 60px, 60px, 366px, 241px, '../images/sprite.png', 'cleaning-2', )

$cleaning-name: 'cleaning'
$cleaning-x: 75px
$cleaning-y: 106px
$cleaning-offset-x: -75px
$cleaning-offset-y: -106px
$cleaning-width: 60px
$cleaning-height: 60px
$cleaning-total-width: 366px
$cleaning-total-height: 241px
$cleaning-image: '../images/sprite.png'
$cleaning: (75px, 106px, -75px, -106px, 60px, 60px, 366px, 241px, '../images/sprite.png', 'cleaning', )

$insurance-name: 'insurance'
$insurance-x: 150px
$insurance-y: 106px
$insurance-offset-x: -150px
$insurance-offset-y: -106px
$insurance-width: 60px
$insurance-height: 60px
$insurance-total-width: 366px
$insurance-total-height: 241px
$insurance-image: '../images/sprite.png'
$insurance: (150px, 106px, -150px, -106px, 60px, 60px, 366px, 241px, '../images/sprite.png', 'insurance', )

$lamp-name: 'lamp'
$lamp-x: 306px
$lamp-y: 0px
$lamp-offset-x: -306px
$lamp-offset-y: 0px
$lamp-width: 60px
$lamp-height: 60px
$lamp-total-width: 366px
$lamp-total-height: 241px
$lamp-image: '../images/sprite.png'
$lamp: (306px, 0px, -306px, 0px, 60px, 60px, 366px, 241px, '../images/sprite.png', 'lamp', )

$lock-name: 'lock'
$lock-x: 0px
$lock-y: 181px
$lock-offset-x: 0px
$lock-offset-y: -181px
$lock-width: 60px
$lock-height: 60px
$lock-total-width: 366px
$lock-total-height: 241px
$lock-image: '../images/sprite.png'
$lock: (0px, 181px, 0px, -181px, 60px, 60px, 366px, 241px, '../images/sprite.png', 'lock', )

$percent-name: 'percent'
$percent-x: 75px
$percent-y: 181px
$percent-offset-x: -75px
$percent-offset-y: -181px
$percent-width: 60px
$percent-height: 60px
$percent-total-width: 366px
$percent-total-height: 241px
$percent-image: '../images/sprite.png'
$percent: (75px, 181px, -75px, -181px, 60px, 60px, 366px, 241px, '../images/sprite.png', 'percent', )

$technic-name: 'technic'
$technic-x: 150px
$technic-y: 181px
$technic-offset-x: -150px
$technic-offset-y: -181px
$technic-width: 60px
$technic-height: 60px
$technic-total-width: 366px
$technic-total-height: 241px
$technic-image: '../images/sprite.png'
$technic: (150px, 181px, -150px, -181px, 60px, 60px, 366px, 241px, '../images/sprite.png', 'technic', )

$trash-name: 'trash'
$trash-x: 225px
$trash-y: 181px
$trash-offset-x: -225px
$trash-offset-y: -181px
$trash-width: 60px
$trash-height: 60px
$trash-total-width: 366px
$trash-total-height: 241px
$trash-image: '../images/sprite.png'
$trash: (225px, 181px, -225px, -181px, 60px, 60px, 366px, 241px, '../images/sprite.png', 'trash', )

$truck-name: 'truck'
$truck-x: 0px
$truck-y: 0px
$truck-offset-x: 0px
$truck-offset-y: 0px
$truck-width: 87px
$truck-height: 91px
$truck-total-width: 366px
$truck-total-height: 241px
$truck-image: '../images/sprite.png'
$truck: (0px, 0px, 0px, 0px, 87px, 91px, 366px, 241px, '../images/sprite.png', 'truck', )

$spritesheet-width: 366px
$spritesheet-height: 241px
$spritesheet-image: '../images/sprite.png'
$spritesheet-sprites: ($alarm, $cafe, $chair, $cleaning-2, $cleaning, $insurance, $lamp, $lock, $percent, $technic, $trash, $truck, )
$spritesheet: (366px, 241px, '../images/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite-bg($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

@mixin sprite($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  .sp
    display: inline-block
    background-image: url(#{$spritesheet-image})

  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .sp--#{$sprite-name}
      @include sprite($sprite)
